{"version":3,"sources":["Friends.js","components/SearchBox.js","components/Card.js","components/CardCollection.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","serviceWorker.js","index.js"],"names":["friends","id","fullName","github","display","React","require","SearchBox","searchChange","action","className","htmlFor","type","placeholder","name","onChange","value","Card","props","src","alt","CardCollection","friendsArray","map","user","index","key","Scroll","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","console","log","filteredFriend","filter","friend","toLocaleLowerCase","includes","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ccf90b9d.chunk.js","sourcesContent":["export const friends = [\r\n{\r\n  id: 1,\r\n  fullName: \"name\",\r\n  github: \"github\",\r\n  display: \"https://robohash.org/mock1\"\r\n},\r\n{\r\n  id: 2,\r\n  fullName: \"name2\",\r\n  github: \"github\",\r\n  display: \"https://robohash.org/mock2\"\r\n},\r\n{\r\n  id: 3,\r\n  fullName: \"name3\",\r\n  github: \"github\",\r\n  display: \"https://robohash.org/mock3\"\r\n},\r\n{\r\n  id: 4,\r\n  fullName: \"direk\",\r\n  github: \"github\",\r\n  display: \"https://robohash.org/mock4\"\r\n},\r\n{\r\n  id: 5,\r\n  fullName: \"name\",\r\n  github: \"github\",\r\n  display: \"https://robohash.org/mock5\"\r\n},\r\n{\r\n  id: 6,\r\n  fullName: \"name\",\r\n  github: \"github\",\r\n  display: \"https://robohash.org/mock6\"\r\n},\r\n{\r\n  id: 7,\r\n  fullName: \"name\",\r\n  github: \"github\",\r\n  display: \"https://robohash.org/mock7\"\r\n},\r\n{\r\n  id: 8,\r\n  fullName: \"name\",\r\n  github: \"github\",\r\n  display: \"https://robohash.org/mock8\"\r\n},\r\n{\r\n  id: 9,\r\n  fullName: \"name\",\r\n  github: \"github\",\r\n  display: \"https://robohash.org/mock9\"\r\n},\r\n{\r\n  id: 10,\r\n  fullName: \"name\",\r\n  github: \"github\",\r\n  display: \"https://robohash.org/mock10\"\r\n},\r\n\r\n\r\n]\r\n\r\n","// import React from 'react';\r\nconst React = require(\"react\")\r\n\r\nconst SearchBox = ( {searchChange} ) => {\r\n\r\n  return(\r\n    <form action=\"#\" className=\"ma3\">\r\n      <label htmlFor=\"friend-search\"></label>\r\n      <input type=\"search\" placeholder=\"Search for your friends\" name=\"friend-search\" \r\n        className=\"bg-lightest-blue pa2\" \r\n        onChange={searchChange}\r\n      />\r\n      <input type=\"submit\" value=\"Search\" className=\"pa2 ml2\" />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Card = (props) => {\r\n\r\n  return(\r\n    <article className=\"tc bg-light-blue br3 pa3 ma3 dib grow bw1 ba shadow-5\">\r\n      <img src={props.display} alt=\"friends-profile-pic\"/>\r\n      <div>\r\n        <h2>{props.fullName}</h2>\r\n        <p>{props.github}</p>\r\n        {/* <h2>{props.name}</h2>\r\n        <p>{props.email}</p> */}\r\n      </div>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n// รับ friends จาก props ของ CardCollection ในหน้า App.js\r\nconst CardCollection = ( {friends} ) => {\r\n\r\n  const friendsArray = friends.map(function(user, index) {\r\n    return (\r\n    <Card \r\n      key={friends[index].id} \r\n      id={friends[index].id} \r\n      fullName={friends[index].fullName} \r\n      github={friends[index].github} \r\n      // name={friends[index].name} \r\n      // email={friends[index].email} \r\n      display={friends[index].display} \r\n    />\r\n    );\r\n  });\r\n\r\n  return(\r\n    <main>\r\n      {friendsArray}\r\n    </main> \r\n  )\r\n}\r\n\r\nexport default CardCollection;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={ { overflowY:\"scroll\", border: \"1px solid black\", height: \"500px\"} }>\r\n      {props.children}\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState( {hasError:true} );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Error: Something unexpected is happening.</h1>\r\n    }\r\n  \r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport { friends } from '../Friends';\r\nimport SearchBox from '../components/SearchBox';\r\nimport CardCollection from '../components/CardCollection';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      friends: [],\r\n      searchfield: \"\"\r\n    }\r\n    console.log(\"1 construct\");\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    // fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    // .then(response => {\r\n    //   return response.json();\r\n    // })\r\n    // .then(users => {\r\n    //   this.setState( {friends: users} )\r\n    // })\r\n    this.setState( {friends: friends} )\r\n    console.log(\"2 did mount\");\r\n  }\r\n\r\n  // ใช้ function declaration ไม่ได้\r\n  onSearchChange = (event) => {\r\n    this.setState( { searchfield: event.target.value } )\r\n    \r\n  }\r\n\r\n  render() {\r\n    const { friends, searchfield } = this.state;\r\n\r\n    const filteredFriend = friends.filter((friend) => {\r\n      return friend.fullName.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase());\r\n    });\r\n\r\n    // ! equals to friends.length === 0\r\n    if(!friends.length === 0) {\r\n      return <h1>Loading</h1>\r\n    } else {\r\n      \r\n      console.log(\"3 render\");\r\n      return(\r\n      <div className=\"tc\">\r\n        <h1 className=\"f1\">CodeCamp Friends</h1>\r\n        <SearchBox searchChange={this.onSearchChange} />\r\n        <Scroll>\r\n          <ErrorBoundary>\r\n            <CardCollection friends={filteredFriend} />\r\n          </ErrorBoundary>\r\n        </Scroll>\r\n      </div>\r\n      );\r\n\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './containers/App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n  );\r\n  \r\n  // If you want your app to work offline and load faster, you can change\r\n  // unregister() to register() below. Note this comes with some pitfalls.\r\n  // Learn more about service workers: https://bit.ly/CRA-PWA\r\n  serviceWorker.unregister();\r\n  "],"sourceRoot":""}